// Generated by jextract

package jdk.internal.ffi.generated.iouring;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct timespec {
 *     __time_t tv_sec;
 *     __syscall_slong_t tv_nsec;
 * }
 * }
 */
@SuppressWarnings("restricted") public class timespec {

    timespec() {
        // Suppresses public default constructor, ensuring non-instantiability,
        // but allows generated subclasses in same package.
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        iouring_h.C_LONG.withName("tv_sec"),
        iouring_h.C_LONG.withName("tv_nsec")
    ).withName("timespec");

    public static final GroupLayout $LAYOUT() {
        return $LAYOUT;
    }

    private static final long tv_sec$OFFSET = 0;
    private static final OfLong tv_sec$LAYOUT = (OfLong)$LAYOUT.select(groupElement("tv_sec"));

    /**
     * Getter for field:
     * {@snippet lang=c :
     * __time_t tv_sec
     * }
     */
    public static long tv_sec(MemorySegment struct) {
        return struct.get(tv_sec$LAYOUT, tv_sec$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * __time_t tv_sec
     * }
     */
    public static void tv_sec(MemorySegment struct, long fieldValue) {
        struct.set(tv_sec$LAYOUT, tv_sec$OFFSET, fieldValue);
    }

    private static final long tv_nsec$OFFSET = 8;
    private static final OfLong tv_nsec$LAYOUT = (OfLong)$LAYOUT.select(groupElement("tv_nsec"));

    /**
     * Getter for field:
     * {@snippet lang=c :
     * __syscall_slong_t tv_nsec
     * }
     */
    public static long tv_nsec(MemorySegment struct) {
        return struct.get(tv_nsec$LAYOUT, tv_nsec$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * __syscall_slong_t tv_nsec
     * }
     */
    public static void tv_nsec(MemorySegment struct, long fieldValue) {
        struct.set(tv_nsec$LAYOUT, tv_nsec$OFFSET, fieldValue);
    }

    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice($LAYOUT().byteSize() * index);
    }

    public static long sizeof() { return $LAYOUT().byteSize(); }

    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate($LAYOUT());
    }

    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, $LAYOUT()));
    }

    public static MemorySegment reinterpret(MemorySegment addr, Arena scope, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, scope, cleanup);
    }

    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena scope, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret($LAYOUT().byteSize() * elementCount, scope, cleanup);
    }
}

