/*
 * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

// This .jasm file is needed for this test to ensure that the illegal protected
// access is done at runtime.  Otherwise, javac would detect and complain about
// the illegal access
super public class another/SuperC version 51:0 {
    protected Field f:I;

    public Method "<init>":"()V" stack 1 locals 1 {
        aload_0;
        invokespecial Method java/lang/Object."<init>":"()V";
        return;
    }
} // end Class another/SuperC


super public class other/putfieldProtected extends another/SuperC version 51:0 {

    public Method "<init>":"()V" stack 1 locals 1 {
        aload_0;
        invokespecial Method another/SuperC."<init>":"()V";
        return;
    }

    public static Method run:"()Z" stack 2 locals 2 {
        new class another/SuperC;
        dup;
        invokespecial Method another/SuperC."<init>":"()V";
        iconst_1;
        putfield Field another/SuperC.f:"I";
        iconst_1;
        ireturn;
    }

} // end Class other/putfieldProtected
