/*
 * Copyright (c) 2022, Red Hat, Inc. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

super public class BadStateAtLongCmp
	version 52:0
{
  public static Field field:I;

  public Method "<init>":"()V"
	stack 1 locals 1
  {
		aload_0;
		invokespecial	Method java/lang/Object."<init>":"()V";
		return;
  }

  /* Same as:
     public static void test() {
        long l = 0;
        do {
            l++;
            field++;
        } while (l < 1000);
     }
     but with field++ between the lcmp and iflt bytecodes.
   */
  public static Method test:"()V"
	stack 4 locals 2
  {
		lconst_0;
		lstore_0;
	L2:	stack_frame_type append;
		locals_map long;
		lload_0;
		lconst_1;
		ladd;
		lstore_0;
		lload_0;
		ldc2_w	long 1000l;
		lcmp;
		getstatic	Field field:"I";
		iconst_1;
		iadd;
		putstatic	Field field:"I";
		iflt	L2;
		return;
  }

} // end Class BadStateAtLongCmp
